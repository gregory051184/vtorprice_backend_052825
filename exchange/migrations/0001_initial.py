# Generated by Django 4.1.3 on 2025-05-09 12:50

import common.model_fields
import common.utils
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import exchange.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('company', '0001_initial'),
        ('chat', '0001_initial'),
        ('contenttypes', '0002_remove_content_type_name'),
    ]

    operations = [
        migrations.CreateModel(
            name='DocumentModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_deleted', models.BooleanField(default=False, verbose_name='Помечен как удаленный')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата добавления')),
                ('name', models.CharField(blank=True, max_length=512)),
                ('document', models.FileField(upload_to=exchange.models.exchange_storage, verbose_name='Документ')),
                ('object_id', models.PositiveIntegerField()),
                ('document_type', models.PositiveSmallIntegerField(choices=[(1, 'Договор на отгрузку'), (2, 'Договор-заявка'), (3, 'Товарно-транспортная накладная'), (4, 'Счет-фактура'), (5, 'Договор приложение спецификация'), (6, 'Унифицированный транспортный документ'), (7, 'Акт'), (8, 'Платежный счет')], null=True, verbose_name='Тип документа')),
            ],
            options={
                'verbose_name': 'Документ сделки',
                'verbose_name_plural': 'Документы сделки',
                'db_table': 'documents',
            },
        ),
        migrations.CreateModel(
            name='EquipmentApplication',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_deleted', models.BooleanField(default=False, verbose_name='Помечен как удаленный')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата добавления')),
                ('address', models.CharField(blank=True, default='', max_length=1024, null=True, verbose_name='Адрес')),
                ('latitude', common.model_fields.LatitudeField(blank=True, decimal_places=15, max_digits=18, null=True, validators=[django.core.validators.MinValueValidator(-90), django.core.validators.MaxValueValidator(90)], verbose_name='Широта')),
                ('longitude', common.model_fields.LongitudeField(blank=True, decimal_places=15, max_digits=18, null=True, validators=[django.core.validators.MinValueValidator(-180), django.core.validators.MaxValueValidator(180)], verbose_name='Долгота')),
                ('status', models.PositiveSmallIntegerField(choices=[(1, 'На проверке'), (2, 'Опубликована'), (3, 'Завершена'), (4, 'Отклонена')], default=1, verbose_name='Статус')),
                ('deal_type', models.PositiveSmallIntegerField(choices=[(1, 'Покупка'), (2, 'Продажа')], verbose_name='Тип сделки')),
                ('with_nds', models.BooleanField(default=False, verbose_name='С НДС')),
                ('price', common.model_fields.AmountField(decimal_places=2, default=0.0, max_digits=10, verbose_name='Цена')),
                ('count', models.PositiveIntegerField(verbose_name='Количество')),
                ('manufacture_date', models.DateField(verbose_name='Дата производства')),
                ('was_in_use', models.BooleanField(default=False, verbose_name='Б/У')),
                ('sale_by_parts', models.BooleanField(default=False, verbose_name='Продажа по частям')),
                ('video_url', models.CharField(blank=True, default='', max_length=512, verbose_name='Ссылка на видео')),
                ('comment', models.TextField(blank=True, default='', verbose_name='Комментарий')),
            ],
            options={
                'verbose_name': 'Заявка по оборудованию',
                'verbose_name_plural': 'Заявки по оборудованию',
                'db_table': 'equipment_applications',
            },
        ),
        migrations.CreateModel(
            name='EquipmentDeal',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_deleted', models.BooleanField(default=False, verbose_name='Помечен как удаленный')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата добавления')),
                ('shipping_address', models.CharField(blank=True, default='', max_length=1024, verbose_name='Адрес отгрузки')),
                ('shipping_latitude', common.model_fields.LatitudeField(blank=True, decimal_places=15, max_digits=18, null=True, validators=[django.core.validators.MinValueValidator(-90), django.core.validators.MaxValueValidator(90)], verbose_name='Широта адреса отгрузки')),
                ('shipping_longitude', common.model_fields.LongitudeField(blank=True, decimal_places=15, max_digits=18, null=True, validators=[django.core.validators.MinValueValidator(-180), django.core.validators.MaxValueValidator(180)], verbose_name='Долгота адреса отгрузки')),
                ('delivery_address', models.CharField(blank=True, default='', max_length=1024, verbose_name='Адрес доставки')),
                ('delivery_latitude', common.model_fields.LatitudeField(blank=True, decimal_places=15, max_digits=18, null=True, validators=[django.core.validators.MinValueValidator(-90), django.core.validators.MaxValueValidator(90)], verbose_name='Широта адреса доставки')),
                ('delivery_longitude', common.model_fields.LongitudeField(blank=True, decimal_places=15, max_digits=18, null=True, validators=[django.core.validators.MinValueValidator(-180), django.core.validators.MaxValueValidator(180)], verbose_name='Долгота адреса доставки')),
                ('status', models.PositiveSmallIntegerField(choices=[(1, 'Согласование условий'), (2, 'Назначение логиста'), (3, 'Машина загружена'), (4, 'Машина выгружена'), (5, 'Окончательная приемка'), (6, 'Сделка закрыта'), (7, 'Проблемная сделка'), (8, 'Сделка отменена')], default=1, verbose_name='Статус')),
                ('with_nds', models.BooleanField(default=False, verbose_name='С НДС')),
                ('price', common.model_fields.AmountField(decimal_places=2, default=0.0, max_digits=10, verbose_name='Цена за единицу')),
                ('count', models.PositiveIntegerField(verbose_name='Количество')),
                ('payment_term', models.PositiveSmallIntegerField(choices=[(1, 'По факту погрузки'), (2, 'По факту выгрузки'), (3, 'Другое')], default=1, verbose_name='Условие оплаты')),
                ('other_payment_term', models.CharField(blank=True, default='', max_length=128, verbose_name='Иное условие оплаты')),
                ('weight', models.FloatField(blank=True, null=True, verbose_name='Вес в кг')),
                ('loaded_weight', models.FloatField(blank=True, help_text='Поле для справки, не влияет на расчет стоимости', null=True, verbose_name='Загруженный вес')),
                ('accepted_weight', models.FloatField(blank=True, help_text='Поле для справки, не влияет на расчет стоимости', null=True, verbose_name='Принятый вес')),
                ('shipping_date', models.DateTimeField(blank=True, null=True, verbose_name='Дата отгрузки')),
                ('delivery_date', models.DateField(blank=True, null=True, verbose_name='Дата прибытия')),
                ('who_delivers', models.PositiveSmallIntegerField(choices=[(1, 'Поставщик'), (2, 'Покупатель'), (3, 'ВторПрайс')], default=3, verbose_name='Кто доставляет')),
                ('buyer_pays_shipping', models.BooleanField(default=True, verbose_name='Доставку оплачивает покупатель')),
                ('deal_number', models.CharField(default=common.utils.generate_random_sequence, max_length=10, verbose_name='Номер сделки')),
                ('loading_hours', models.CharField(blank=True, default='', max_length=12, verbose_name='Часы погрузки')),
                ('comment', models.TextField(blank=True, default='', verbose_name='Комментарий')),
            ],
            options={
                'verbose_name': 'Сделка по оборудованию',
                'verbose_name_plural': 'Сделки по оборудованию',
                'db_table': 'equipment_deals',
            },
        ),
        migrations.CreateModel(
            name='ImageModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to=exchange.models.exchange_storage, verbose_name='Изображение')),
                ('object_id', models.PositiveIntegerField()),
            ],
            options={
                'verbose_name': 'Изображение',
                'verbose_name_plural': 'Изображения',
                'db_table': 'images',
            },
        ),
        migrations.CreateModel(
            name='RecyclablesApplication',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_deleted', models.BooleanField(default=False, verbose_name='Помечен как удаленный')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата добавления')),
                ('with_nds', models.BooleanField(default=False, verbose_name='С НДС')),
                ('price', common.model_fields.AmountField(decimal_places=2, default=0.0, max_digits=10, verbose_name='Цена за единицу веса')),
                ('weediness', models.FloatField(blank=True, null=True, verbose_name='Сорность в %')),
                ('moisture', models.FloatField(blank=True, null=True, verbose_name='Влага или посторонние включения в %')),
                ('is_packing_deduction', models.BooleanField(blank=True, help_text='Указывается, если тип заявки готово к отгрузке', null=True, verbose_name='Упаковка вычитается')),
                ('packing_deduction_type', models.PositiveSmallIntegerField(blank=True, choices=[(1, 'На упаковку с каждой кипы'), (2, 'На упаковку с общего веса')], help_text='Указывается, если тип заявки готово к отгрузке', null=True, verbose_name='Вычет')),
                ('packing_deduction_value', models.PositiveSmallIntegerField(blank=True, help_text='Указывается, если тип заявки готово к отгрузке', null=True, verbose_name='Значение вычета')),
                ('comment', models.TextField(blank=True, default='', verbose_name='Комментарий')),
                ('application_recyclable_status', models.PositiveSmallIntegerField(choices=[(1, 'Отходы'), (2, 'Гранула')], default=1, verbose_name='Статус Фракции')),
                ('status', models.PositiveSmallIntegerField(choices=[(1, 'На проверке'), (2, 'Опубликована'), (3, 'Завершена'), (4, 'Отклонена')], default=1, verbose_name='Статус')),
                ('deal_type', models.PositiveSmallIntegerField(choices=[(1, 'Покупка'), (2, 'Продажа')], verbose_name='Тип сделки')),
                ('urgency_type', models.PositiveSmallIntegerField(choices=[(1, 'Готово к отгрузке'), (2, 'Контракт на поставку')], verbose_name='Срочность')),
                ('bale_count', models.FloatField(blank=True, help_text='Указывается, если тип заявки готово к отгрузке', null=True, verbose_name='Количество кип')),
                ('bale_weight', models.FloatField(blank=True, help_text='Указывается, если тип заявки готово к отгрузке', null=True, verbose_name='Вес одной кипы')),
                ('volume', models.FloatField(blank=True, help_text='Указывается, если тип заявки контракт на поставку', null=True, verbose_name='Объем')),
                ('lot_size', models.FloatField(blank=True, help_text='Указывается, если тип заявки готово к отгрузке', null=True, verbose_name='Лотность')),
                ('video_url', models.CharField(blank=True, default='', help_text='Указывается, если тип заявки готово к отгрузке', max_length=512, verbose_name='Ссылка на видео')),
                ('full_weigth', models.PositiveIntegerField(null=True, verbose_name='Полный вес заявки')),
                ('address', models.CharField(blank=True, default='', max_length=1024, verbose_name='Адрес')),
                ('latitude', common.model_fields.LatitudeField(blank=True, decimal_places=15, max_digits=18, null=True, validators=[django.core.validators.MinValueValidator(-90), django.core.validators.MaxValueValidator(90)], verbose_name='Широта')),
                ('longitude', common.model_fields.LongitudeField(blank=True, decimal_places=15, max_digits=18, null=True, validators=[django.core.validators.MinValueValidator(-180), django.core.validators.MaxValueValidator(180)], verbose_name='Долгота')),
            ],
            options={
                'verbose_name': 'Заявка по вторсырью',
                'verbose_name_plural': 'Заявки по вторсырью',
                'db_table': 'recyclables_applications',
            },
        ),
        migrations.CreateModel(
            name='RecyclablesDeal',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_deleted', models.BooleanField(default=False, verbose_name='Помечен как удаленный')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата добавления')),
                ('shipping_address', models.CharField(blank=True, default='', max_length=1024, verbose_name='Адрес отгрузки')),
                ('shipping_latitude', common.model_fields.LatitudeField(blank=True, decimal_places=15, max_digits=18, null=True, validators=[django.core.validators.MinValueValidator(-90), django.core.validators.MaxValueValidator(90)], verbose_name='Широта адреса отгрузки')),
                ('shipping_longitude', common.model_fields.LongitudeField(blank=True, decimal_places=15, max_digits=18, null=True, validators=[django.core.validators.MinValueValidator(-180), django.core.validators.MaxValueValidator(180)], verbose_name='Долгота адреса отгрузки')),
                ('delivery_address', models.CharField(blank=True, default='', max_length=1024, verbose_name='Адрес доставки')),
                ('delivery_latitude', common.model_fields.LatitudeField(blank=True, decimal_places=15, max_digits=18, null=True, validators=[django.core.validators.MinValueValidator(-90), django.core.validators.MaxValueValidator(90)], verbose_name='Широта адреса доставки')),
                ('delivery_longitude', common.model_fields.LongitudeField(blank=True, decimal_places=15, max_digits=18, null=True, validators=[django.core.validators.MinValueValidator(-180), django.core.validators.MaxValueValidator(180)], verbose_name='Долгота адреса доставки')),
                ('with_nds', models.BooleanField(default=False, verbose_name='С НДС')),
                ('price', common.model_fields.AmountField(decimal_places=2, default=0.0, max_digits=10, verbose_name='Цена за единицу веса')),
                ('weediness', models.FloatField(blank=True, null=True, verbose_name='Сорность в %')),
                ('moisture', models.FloatField(blank=True, null=True, verbose_name='Влага или посторонние включения в %')),
                ('is_packing_deduction', models.BooleanField(blank=True, help_text='Указывается, если тип заявки готово к отгрузке', null=True, verbose_name='Упаковка вычитается')),
                ('packing_deduction_type', models.PositiveSmallIntegerField(blank=True, choices=[(1, 'На упаковку с каждой кипы'), (2, 'На упаковку с общего веса')], help_text='Указывается, если тип заявки готово к отгрузке', null=True, verbose_name='Вычет')),
                ('packing_deduction_value', models.PositiveSmallIntegerField(blank=True, help_text='Указывается, если тип заявки готово к отгрузке', null=True, verbose_name='Значение вычета')),
                ('comment', models.TextField(blank=True, default='', verbose_name='Комментарий')),
                ('status', models.PositiveSmallIntegerField(choices=[(1, 'Согласование условий'), (2, 'Назначение логиста'), (3, 'Машина загружена'), (4, 'Машина выгружена'), (5, 'Окончательная приемка'), (6, 'Сделка закрыта'), (7, 'Проблемная сделка'), (8, 'Сделка отменена')], default=1, verbose_name='Статус')),
                ('weight', models.FloatField(blank=True, null=True, verbose_name='Вес партии в кг')),
                ('payment_term', models.PositiveSmallIntegerField(choices=[(1, 'По факту погрузки'), (2, 'По факту выгрузки'), (3, 'Другое')], default=1, verbose_name='Условие оплаты')),
                ('other_payment_term', models.CharField(blank=True, default='', max_length=128, verbose_name='Иное условие оплаты')),
                ('loaded_weight', models.FloatField(blank=True, help_text='Поле для справки, не влияет на расчет стоимости', null=True, verbose_name='Загруженный вес')),
                ('accepted_weight', models.FloatField(blank=True, help_text='Поле для справки, не влияет на расчет стоимости', null=True, verbose_name='Принятый вес')),
                ('shipping_date', models.DateTimeField(blank=True, null=True, verbose_name='Дата отгрузки')),
                ('delivery_date', models.DateField(blank=True, null=True, verbose_name='Дата прибытия')),
                ('who_delivers', models.PositiveSmallIntegerField(choices=[(1, 'Поставщик'), (2, 'Покупатель'), (3, 'ВторПрайс')], default=3, verbose_name='Кто доставляет')),
                ('loading_hours', models.CharField(blank=True, default='', max_length=12, verbose_name='Часы погрузки')),
                ('buyer_pays_shipping', models.BooleanField(default=True, verbose_name='Доставку оплачивает покупатель')),
                ('deal_number', models.CharField(default=common.utils.generate_random_sequence, max_length=10, verbose_name='Номер сделки')),
            ],
            options={
                'verbose_name': 'Сделка по вторсырью',
                'verbose_name_plural': 'Сделка по вторсырью',
                'db_table': 'recyclables_deals',
            },
        ),
        migrations.CreateModel(
            name='SpecialApplication',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_deleted', models.BooleanField(default=False, verbose_name='Помечен как удаленный')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата добавления')),
                ('address', models.CharField(blank=True, default='', max_length=1024, null=True, verbose_name='Адрес')),
                ('latitude', common.model_fields.LatitudeField(blank=True, decimal_places=15, max_digits=18, null=True, validators=[django.core.validators.MinValueValidator(-90), django.core.validators.MaxValueValidator(90)], verbose_name='Широта')),
                ('longitude', common.model_fields.LongitudeField(blank=True, decimal_places=15, max_digits=18, null=True, validators=[django.core.validators.MinValueValidator(-180), django.core.validators.MaxValueValidator(180)], verbose_name='Долгота')),
                ('shipping_address', models.CharField(blank=True, default='', max_length=1024, verbose_name='Адрес отгрузки')),
                ('shipping_latitude', common.model_fields.LatitudeField(blank=True, decimal_places=15, max_digits=18, null=True, validators=[django.core.validators.MinValueValidator(-90), django.core.validators.MaxValueValidator(90)], verbose_name='Широта адреса отгрузки')),
                ('shipping_longitude', common.model_fields.LongitudeField(blank=True, decimal_places=15, max_digits=18, null=True, validators=[django.core.validators.MinValueValidator(-180), django.core.validators.MaxValueValidator(180)], verbose_name='Долгота адреса отгрузки')),
                ('delivery_address', models.CharField(blank=True, default='', max_length=1024, verbose_name='Адрес доставки')),
                ('delivery_latitude', common.model_fields.LatitudeField(blank=True, decimal_places=15, max_digits=18, null=True, validators=[django.core.validators.MinValueValidator(-90), django.core.validators.MaxValueValidator(90)], verbose_name='Широта адреса доставки')),
                ('delivery_longitude', common.model_fields.LongitudeField(blank=True, decimal_places=15, max_digits=18, null=True, validators=[django.core.validators.MinValueValidator(-180), django.core.validators.MaxValueValidator(180)], verbose_name='Долгота адреса доставки')),
                ('with_nds', models.BooleanField(default=False, verbose_name='С НДС')),
                ('description', models.TextField(blank=True, default='', verbose_name='Описание')),
                ('video_url', models.CharField(blank=True, default='', max_length=512, verbose_name='Ссылка на видео')),
                ('price', models.FloatField(blank=True, null=True, verbose_name='Цена специальной заявки')),
                ('chat', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='special_app', to='chat.chat', verbose_name='Чат специльного предложения')),
                ('city', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='company.city', verbose_name='Город')),
            ],
            options={
                'verbose_name': 'Специальная заявка',
                'verbose_name_plural': 'Специальные заявки',
                'db_table': 'special_applications',
            },
        ),
        migrations.CreateModel(
            name='SpecialApplicationPaidPeriod',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_deleted', models.BooleanField(default=False, verbose_name='Помечен как удаленный')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата добавления')),
                ('name', models.CharField(db_index=True, max_length=1024, verbose_name='Название')),
                ('price', models.FloatField(blank=True, null=True, verbose_name='Цена за период')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='SpecialApps',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_deleted', models.BooleanField(default=False, verbose_name='Помечен как удаленный')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата добавления')),
                ('time_end', models.DateTimeField(verbose_name='Дата окончания специальной заявки')),
                ('time_begin', models.DateTimeField(verbose_name='Дата начала специальной заявки')),
                ('payment_number', models.CharField(blank=True, max_length=255, null=True, verbose_name='Номер платежа')),
                ('payment_access', models.BooleanField(blank=True, default=False, null=True, verbose_name='Успешность платежа')),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='company.company')),
                ('special_application', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='exchange.specialapplication')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='specialapplication',
            name='companies',
            field=models.ManyToManyField(blank=True, related_name='companies_special_applications', through='exchange.SpecialApps', to='company.company', verbose_name='Специальные заявки компаний'),
        ),
        migrations.AddField(
            model_name='specialapplication',
            name='period',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='periods', to='exchange.specialapplicationpaidperiod', verbose_name='Период'),
        ),
        migrations.CreateModel(
            name='Review',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_deleted', models.BooleanField(default=False, verbose_name='Помечен как удаленный')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата добавления')),
                ('rate', models.PositiveSmallIntegerField(validators=[django.core.validators.MaxValueValidator(5), django.core.validators.MinValueValidator(1)], verbose_name='Оценка')),
                ('comment', models.TextField(verbose_name='Комментарий')),
                ('object_id', models.PositiveIntegerField()),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='company.company', verbose_name='Кого оцениваем')),
                ('content_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contenttypes.contenttype')),
            ],
            options={
                'verbose_name': 'Отзыв',
                'verbose_name_plural': 'Отзывы',
                'db_table': 'reviews',
            },
        ),
    ]
